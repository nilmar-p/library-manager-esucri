package forms;

import enums.ItemType;
import static enums.ItemType.LIVRO;
import static enums.ItemType.QUADRINHOS;
import enums.LiteraryGenre;
import enums.MusicalGenre;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Book;
import model.CD;
import model.Item;
import model.Magazine;
import model.None;

import utils.Utils;

public class MenuScreen extends javax.swing.JDialog {

    private static LinkedList<Item> registeredItems = new LinkedList<>();

    private boolean showGenre = false;
    private boolean showPages = true;

    //getters and setters
    public static LinkedList<Item> getRegisteredItems() {
        return registeredItems;
    }

    public MenuScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        labelItemType = new javax.swing.JLabel();
        comboGenre = new javax.swing.JComboBox<>();
        labelGenre = new javax.swing.JLabel();
        labelTitle = new javax.swing.JLabel();
        fieldTitle = new javax.swing.JTextField();
        fieldPublisher = new javax.swing.JTextField();
        labelPublisher = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelNumberOfPages = new javax.swing.JLabel();
        spinnerSupplierPrice = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        spinnerPublicationYear = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        spinnerNumberOfPages = new javax.swing.JSpinner();
        comboItemType = new javax.swing.JComboBox<>();
        buttonItemsInStock = new javax.swing.JButton();
        buttonRegisterItem = new javax.swing.JButton();
        buttonSettings = new javax.swing.JButton();
        fieldContributor = new javax.swing.JTextField();
        labelContributor = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("CONFIGURAÇÕES");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CADASTRAR ITEM");
        setMaximumSize(new java.awt.Dimension(500, 550));
        setMinimumSize(new java.awt.Dimension(500, 550));
        setPreferredSize(new java.awt.Dimension(500, 550));
        setResizable(false);
        setSize(new java.awt.Dimension(500, 550));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        labelItemType.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelItemType.setText("Tipo:");

        comboGenre.setBackground(new java.awt.Color(0, 153, 204));
        comboGenre.setForeground(new java.awt.Color(255, 255, 255));
        comboGenre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        labelGenre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelGenre.setText("Gênero:");

        labelTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelTitle.setText("Título:");
        labelTitle.setMaximumSize(new java.awt.Dimension(60, 35));
        labelTitle.setMinimumSize(new java.awt.Dimension(60, 35));
        labelTitle.setPreferredSize(new java.awt.Dimension(60, 35));

        fieldTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldTitleActionPerformed(evt);
            }
        });

        labelPublisher.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelPublisher.setText("Editora:");
        labelPublisher.setToolTipText("");
        labelPublisher.setMaximumSize(new java.awt.Dimension(60, 35));
        labelPublisher.setMinimumSize(new java.awt.Dimension(60, 35));
        labelPublisher.setPreferredSize(new java.awt.Dimension(60, 35));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setText("Detalhes técnicos:");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelNumberOfPages.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelNumberOfPages.setText("Páginas:");
        jPanel1.add(labelNumberOfPages, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, -1, 30));

        spinnerSupplierPrice.setModel(new javax.swing.SpinnerNumberModel(1.0d, 1.0d, null, 1.0d));
        jPanel1.add(spinnerSupplierPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 80, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Preço do fornecedor (un.):");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 30));

        spinnerPublicationYear.setModel(new javax.swing.SpinnerNumberModel(2000, null, 2025, 1));
        jPanel1.add(spinnerPublicationYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 80, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Ano Lançamento:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        spinnerNumberOfPages.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jPanel1.add(spinnerNumberOfPages, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 80, 30));

        comboItemType.setBackground(new java.awt.Color(0, 153, 204));
        comboItemType.setForeground(new java.awt.Color(255, 255, 255));
        comboItemType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboItemType.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                comboItemTypeAncestorResized(evt);
            }
        });
        comboItemType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboItemTypeActionPerformed(evt);
            }
        });

        buttonItemsInStock.setBackground(new java.awt.Color(0, 153, 204));
        buttonItemsInStock.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        buttonItemsInStock.setForeground(new java.awt.Color(255, 255, 255));
        buttonItemsInStock.setText("ESTOQUE");
        buttonItemsInStock.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonItemsInStock.setPreferredSize(new java.awt.Dimension(120, 35));
        buttonItemsInStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonItemsInStockActionPerformed(evt);
            }
        });

        buttonRegisterItem.setBackground(new java.awt.Color(0, 153, 204));
        buttonRegisterItem.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        buttonRegisterItem.setForeground(new java.awt.Color(255, 255, 255));
        buttonRegisterItem.setText("REGISTRAR");
        buttonRegisterItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonRegisterItem.setInheritsPopupMenu(true);
        buttonRegisterItem.setPreferredSize(new java.awt.Dimension(120, 35));
        buttonRegisterItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegisterItemActionPerformed(evt);
            }
        });

        buttonSettings.setBackground(new java.awt.Color(204, 204, 204));
        buttonSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/settings-icon.png"))); // NOI18N
        buttonSettings.setBorder(null);
        buttonSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSettingsActionPerformed(evt);
            }
        });

        fieldContributor.setMaximumSize(new java.awt.Dimension(64, 22));

        labelContributor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelContributor.setMaximumSize(new java.awt.Dimension(60, 35));
        labelContributor.setMinimumSize(new java.awt.Dimension(60, 35));
        labelContributor.setPreferredSize(new java.awt.Dimension(60, 35));

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CADASTRAR ITEM");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(labelItemType)
                            .addGap(6, 6, 6)
                            .addComponent(comboItemType, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelGenre)
                            .addGap(6, 6, 6)
                            .addComponent(comboGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(labelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelContributor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(labelPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fieldContributor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fieldPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(fieldTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(buttonRegisterItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(buttonItemsInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonSettings))
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelItemType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboItemType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(fieldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(fieldPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelContributor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(fieldContributor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonRegisterItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonItemsInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonSettings))
                .addGap(89, 89, 89))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonItemsInStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonItemsInStockActionPerformed
        StockScreen stockScreen = new StockScreen(MenuScreen.this, true);

        stockScreen.setVisible(true);
    }//GEN-LAST:event_buttonItemsInStockActionPerformed

    private void buttonRegisterItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegisterItemActionPerformed
        Item unregisteredItem;

        if (fieldTitle.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERRO! Título não pode ser vazio.", "ERRO!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        switch (comboItemType.getSelectedItem()) {
            case ItemType.LIVRO, ItemType.QUADRINHOS ->
                unregisteredItem = new Book(
                        fieldTitle.getText(),
                        fieldPublisher.getText(),
                        (int) spinnerPublicationYear.getValue(),
                        (ItemType) comboItemType.getSelectedItem(),
                        ((Number) spinnerSupplierPrice.getValue()).doubleValue(),
                        (int) spinnerNumberOfPages.getValue(),
                        (LiteraryGenre) comboGenre.getSelectedItem(),
                        fieldContributor.getText()
                );
            case ItemType.CD ->
                unregisteredItem = new CD(
                        (MusicalGenre) comboGenre.getSelectedItem(),
                        fieldTitle.getText(),
                        fieldPublisher.getText(),
                        (int) spinnerPublicationYear.getValue(),
                        (ItemType) comboItemType.getSelectedItem(),
                        ((Number) spinnerSupplierPrice.getValue()).doubleValue(),
                        fieldContributor.getText()
                );

            case ItemType.REVISTA ->
                unregisteredItem = new Magazine(fieldTitle.getText(),
                        fieldPublisher.getText(),
                        (int) spinnerPublicationYear.getValue(),
                        (ItemType) comboItemType.getSelectedItem(),
                        ((Number) spinnerSupplierPrice.getValue()).doubleValue(),
                        fieldContributor.getText()
                );
            default ->
                unregisteredItem = new None();
        }

        try {
            registeredItems.add(unregisteredItem);
            for (Item registeredItem : registeredItems) {
                System.out.println(registeredItem);
            }
            JOptionPane.showMessageDialog(null, "Item cadastrado com sucesso.", "SUCESSO!", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO! Item inválido, tente novamente.", "ERRO!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Utils.clearFields(fieldTitle, fieldPublisher, fieldContributor, comboItemType, spinnerPublicationYear, spinnerNumberOfPages, spinnerSupplierPrice);
    }//GEN-LAST:event_buttonRegisterItemActionPerformed

    private void comboItemTypeAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_comboItemTypeAncestorResized
        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemTypeAncestorResized

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        DefaultComboBoxModel cbm = new DefaultComboBoxModel(ItemType.values());
        comboItemType.setModel(cbm);

        labelGenre.setVisible(showGenre);
        comboGenre.setVisible(showGenre);

        labelContributor.setText("Manch. :");

        labelNumberOfPages.setVisible(showPages);
        spinnerNumberOfPages.setVisible(showPages);
    }//GEN-LAST:event_formWindowOpened

    private void comboItemTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboItemTypeActionPerformed
        DefaultComboBoxModel cbm = new DefaultComboBoxModel();

        ItemType selectedType = (ItemType) comboItemType.getSelectedItem();

        switch (selectedType) {
            case LIVRO, QUADRINHOS -> {
                cbm = new DefaultComboBoxModel(LiteraryGenre.values());
                showGenre = true;
                showPages = true;

                labelPublisher.setText("Editora:");

                if (selectedType == ItemType.LIVRO) {
                    labelContributor.setText("Autor:");
                } else {
                    labelContributor.setText("Ilustr. :");
                }
            }
            case CD -> {
                cbm = new DefaultComboBoxModel(MusicalGenre.values());
                labelContributor.setText("Artista:");
                labelPublisher.setText("Prod:");

                showGenre = true;
                showPages = false;
            }
            case REVISTA -> {
                labelContributor.setText("Manch. :");

                showGenre = false;
                showPages = true;
            }
            default -> {
                cbm = new DefaultComboBoxModel();
                showGenre = false;
                showPages = false;

            }
        }

        labelGenre.setVisible(showGenre);
        comboGenre.setVisible(showGenre);

        comboGenre.setModel(cbm);

        labelNumberOfPages.setVisible(showPages);
        spinnerNumberOfPages.setVisible(showPages);
    }//GEN-LAST:event_comboItemTypeActionPerformed

    private void buttonSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSettingsActionPerformed
        SettingsScreen settingsScreen = new SettingsScreen(MenuScreen.this, true);

        settingsScreen.setVisible(true);        
    }//GEN-LAST:event_buttonSettingsActionPerformed

    private void fieldTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldTitleActionPerformed

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MenuScreen dialog = new MenuScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonItemsInStock;
    private javax.swing.JButton buttonRegisterItem;
    private javax.swing.JButton buttonSettings;
    private javax.swing.JComboBox<String> comboGenre;
    private javax.swing.JComboBox<String> comboItemType;
    private javax.swing.JTextField fieldContributor;
    private javax.swing.JTextField fieldPublisher;
    private javax.swing.JTextField fieldTitle;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel labelContributor;
    private javax.swing.JLabel labelGenre;
    private javax.swing.JLabel labelItemType;
    private javax.swing.JLabel labelNumberOfPages;
    private javax.swing.JLabel labelPublisher;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JSpinner spinnerNumberOfPages;
    private javax.swing.JSpinner spinnerPublicationYear;
    private javax.swing.JSpinner spinnerSupplierPrice;
    // End of variables declaration//GEN-END:variables
}
